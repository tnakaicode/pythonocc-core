from enum import IntEnum
from typing import overload, NewType, Optional, Tuple

from OCC.Core.Standard import *
from OCC.Core.NCollection import *
from OCC.Core.IGESData import *
from OCC.Core.Geom2d import *
from OCC.Core.IGESGeom import *


class Geom2dToIGES_Geom2dEntity:
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, GE: Geom2dToIGES_Geom2dEntity) -> None: ...
    def GetModel(self) -> IGESData_IGESModel: ...
    def GetUnit(self) -> float: ...
    def SetModel(self, model: IGESData_IGESModel) -> None: ...
    def SetUnit(self, unit: float) -> None: ...

class Geom2dToIGES_Geom2dCurve(Geom2dToIGES_Geom2dEntity):
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, G2dE: Geom2dToIGES_Geom2dEntity) -> None: ...
    def Transfer2dCurve(self, start: Geom2d_Curve, Udeb: float, Ufin: float) -> IGESData_IGESEntity: ...

class Geom2dToIGES_Geom2dPoint(Geom2dToIGES_Geom2dEntity):
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, G2dE: Geom2dToIGES_Geom2dEntity) -> None: ...
    @overload
    def Transfer2dPoint(self, start: Geom2d_Point) -> IGESGeom_Point: ...
    @overload
    def Transfer2dPoint(self, start: Geom2d_CartesianPoint) -> IGESGeom_Point: ...

class Geom2dToIGES_Geom2dVector(Geom2dToIGES_Geom2dEntity):
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, G2dE: Geom2dToIGES_Geom2dEntity) -> None: ...
    @overload
    def Transfer2dVector(self, start: Geom2d_Vector) -> IGESGeom_Direction: ...
    @overload
    def Transfer2dVector(self, start: Geom2d_VectorWithMagnitude) -> IGESGeom_Direction: ...
    @overload
    def Transfer2dVector(self, start: Geom2d_Direction) -> IGESGeom_Direction: ...

# harray1 classes
# harray2 classes
# hsequence classes

